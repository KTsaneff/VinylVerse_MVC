// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VynilVerse.DataAccess.Data;

#nullable disable

namespace VynilVerse.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.27")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("VynilVerse.Models.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 4,
                            DisplayOrder = 1,
                            Name = "Jazz"
                        },
                        new
                        {
                            Id = 5,
                            DisplayOrder = 2,
                            Name = "Latin"
                        },
                        new
                        {
                            Id = 6,
                            DisplayOrder = 3,
                            Name = "Pop"
                        },
                        new
                        {
                            Id = 8,
                            DisplayOrder = 4,
                            Name = "Reggae"
                        },
                        new
                        {
                            Id = 9,
                            DisplayOrder = 5,
                            Name = "Rock"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
